{"ast":null,"code":"import _classCallCheck from \"F:\\\\Visual Studio Code F\\\\Projects\\\\SkillCrush 101\\\\React\\\\Sticky Note App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Visual Studio Code F\\\\Projects\\\\SkillCrush 101\\\\React\\\\Sticky Note App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Visual Studio Code F\\\\Projects\\\\SkillCrush 101\\\\React\\\\Sticky Note App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Visual Studio Code F\\\\Projects\\\\SkillCrush 101\\\\React\\\\Sticky Note App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Visual Studio Code F\\\\Projects\\\\SkillCrush 101\\\\React\\\\Sticky Note App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Visual Studio Code F\\\\Projects\\\\SkillCrush 101\\\\React\\\\Sticky Note App\\\\src\\\\Note.js\";\nimport React, { Component } from \"react\";\n/* This presentational component renders a single\r\nlist item element with two text input fields,\r\none for the note's title and one for the note's\r\ndescription. When the user types in these fields,\r\nfunctions that are passed to this component\r\nas props are used to update the state of the\r\ncorresponding note object in the state of the\r\nApp component  */\n\nvar Note = /*#__PURE__*/function (_Component) {\n  _inherits(Note, _Component);\n\n  function Note() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Note);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Note)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateTitle = function (e) {\n      var updatedValue = e.target.value;\n      var editMeId = _this.props.note.id;\n\n      _this.props.onType(editMeId, \"title\", updatedValue);\n    };\n\n    _this.updateDescription = function (e) {\n      var updatedValue = e.target.value;\n      var editMeId = _this.props.note.id;\n\n      _this.props.onType(editMeId, \"description\", updatedValue);\n    };\n\n    _this.clickDelete = function () {\n      return _this.props.remove(_this.props.note.id);\n    };\n\n    return _this;\n  }\n\n  _createClass(Note, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"note\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.props.note.title,\n        onChange: this.updateTitle,\n        placeholder: \"Title\",\n        className: \"note__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"textarea\", {\n        value: this.props.note.description,\n        onChange: this.updateDescription,\n        placeholder: \"Description...\",\n        className: \"note__description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.clickDelete,\n        className: \"note__delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, \"X\"));\n    }\n  }]);\n\n  return Note;\n}(Component);\n\nexport default Note;","map":{"version":3,"sources":["F:/Visual Studio Code F/Projects/SkillCrush 101/React/Sticky Note App/src/Note.js"],"names":["React","Component","Note","updateTitle","e","updatedValue","target","value","editMeId","props","note","id","onType","updateDescription","clickDelete","remove","title","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,I;;;;;;;;;;;;;;;;UACJC,W,GAAc,UAACC,CAAD,EAAO;AACnB,UAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA9B;AACA,UAAMC,QAAQ,GAAG,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,EAAjC;;AACA,YAAKF,KAAL,CAAWG,MAAX,CAAkBJ,QAAlB,EAA4B,OAA5B,EAAqCH,YAArC;AACD,K;;UACDQ,iB,GAAoB,UAACT,CAAD,EAAO;AACzB,UAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA9B;AACA,UAAMC,QAAQ,GAAG,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,EAAjC;;AACA,YAAKF,KAAL,CAAWG,MAAX,CAAkBJ,QAAlB,EAA4B,aAA5B,EAA2CH,YAA3C;AACD,K;;UACDS,W,GAAc;AAAA,aAAM,MAAKL,KAAL,CAAWM,MAAX,CAAkB,MAAKN,KAAL,CAAWC,IAAX,CAAgBC,EAAlC,CAAN;AAAA,K;;;;;;;6BACL;AACP,0BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAAX,CAAgBM,KAFzB;AAGE,QAAA,QAAQ,EAAE,KAAKb,WAHjB;AAIE,QAAA,WAAW,EAAC,OAJd;AAKE,QAAA,SAAS,EAAC,aALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAQE;AACE,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWC,IAAX,CAAgBO,WADzB;AAEE,QAAA,QAAQ,EAAE,KAAKJ,iBAFjB;AAGE,QAAA,WAAW,EAAC,gBAHd;AAIE,QAAA,SAAS,EAAC,mBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,eAcE;AAAM,QAAA,OAAO,EAAE,KAAKC,WAApB;AAAiC,QAAA,SAAS,EAAC,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF,CADF;AAoBD;;;;EAjCgBb,S;;AAoCnB,eAAeC,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n/* This presentational component renders a single\r\nlist item element with two text input fields,\r\none for the note's title and one for the note's\r\ndescription. When the user types in these fields,\r\nfunctions that are passed to this component\r\nas props are used to update the state of the\r\ncorresponding note object in the state of the\r\nApp component  */\r\nclass Note extends Component {\r\n  updateTitle = (e) => {\r\n    const updatedValue = e.target.value;\r\n    const editMeId = this.props.note.id;\r\n    this.props.onType(editMeId, \"title\", updatedValue);\r\n  };\r\n  updateDescription = (e) => {\r\n    const updatedValue = e.target.value;\r\n    const editMeId = this.props.note.id;\r\n    this.props.onType(editMeId, \"description\", updatedValue);\r\n  };\r\n  clickDelete = () => this.props.remove(this.props.note.id);\r\n  render() {\r\n    return (\r\n      <li className=\"note\">\r\n        <input\r\n          type=\"text\"\r\n          value={this.props.note.title}\r\n          onChange={this.updateTitle}\r\n          placeholder=\"Title\"\r\n          className=\"note__title\"\r\n        />\r\n        <textarea\r\n          value={this.props.note.description}\r\n          onChange={this.updateDescription}\r\n          placeholder=\"Description...\"\r\n          className=\"note__description\"\r\n        />\r\n        <span onClick={this.clickDelete} className=\"note__delete\">\r\n          X\r\n        </span>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n"]},"metadata":{},"sourceType":"module"}